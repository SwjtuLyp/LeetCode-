vector<string >ans;
    string s;
    int max;
    void dfs(int m,int n){
        //m是剩余‘（’的个数，只有，m大于n才能写入‘）’
        if(m==0&&n==0)
            ans.push_back(s);
        if(m<0||n<0)
            return;
        if(m<n){
            s[max-m-n]='(';
            dfs(m-1,n);
            s[max-m-n]=')';
            dfs(m,n-1);
        }else{
            if(m==n){
                s[max-m-n]='(';
                dfs(m-1,n);
            }
        }
    }
    vector<string> generateParenthesis(int n) {
        max=2*n;
        for(int i=0;i<2*n;i++){
            s+='0';
        }
        dfs(n,n);
        return ans;
    }