int count=0;
    int m;
    int n;
    void dfs(vector<vector<char>>&grid,vector<vector<bool>>&bl,int k1,int k2){
        if(k1<0||k2<0||k1>=m||k2>=n)
            return;
        if(bl[k1][k2]&&grid[k1][k2]=='1')
            bl[k1][k2]=false;
        else
            return;
    
        dfs(grid,bl,k1,k2-1);

        dfs(grid,bl,k1-1,k2);
        
        dfs(grid,bl,k1+1,k2);

        dfs(grid,bl,k1,k2+1);
        
    }
    int numIslands(vector<vector<char>>& grid) {
        m=grid.size();
        if(m==0)
            return 0;
        n=grid[0].size();
        vector<vector<bool>>bl;
        for(int i=0;i<m;i++){
            vector<bool>res;
            for(int j=0;j<n;j++){
                res.push_back(true);
            }
            bl.push_back(res);
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(bl[i][j]&&grid[i][j]=='1'){
                    count++;
                    dfs(grid,bl,i,j);
                }
            }
        }
        return count;
    }